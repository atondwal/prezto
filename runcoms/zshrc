export KEYTIMEOUT=1
#
# Executes commands at the start of an interactive session.
#
# Authors:
#   Sorin Ionescu <sorin.ionescu@gmail.com>
#

# Source Prezto.
if [[ -s "${ZDOTDIR:-$HOME}/.zprezto/init.zsh" ]]; then
  source "${ZDOTDIR:-$HOME}/.zprezto/init.zsh"
fi

# Customize to your needs...
alias -s pdf="evince"
alias ra=ranger
#alias nv=nvim
alias vn=nvim
alias ack=ag
alias vw="nvim +VimwikiIndex"
alias em=emacs -nw
autoload -U zmv
bindkey '^R' history-incremental-pattern-search-backward

#if [ -e /home/atondwal/.nix-profile/etc/profile.d/nix.sh ]; then . /home/atondwal/.nix-profile/etc/profile.d/nix.sh; fi # added by Nix installer

#source /usr/local/bin/virtualenvwrapper.sh
#prompt agnoster
ZSH_HIGHLIGHT_STYLES[path]='fg=lightblue'

nv() {
  if [[ -z $NVIM_LISTEN_ADDRESS ]]; then
    # not running inside nvim
    nvim "$@"
  else
    python -c "from neovim import attach; import os; vim = attach('socket', path='$NVIM_LISTEN_ADDRESS'); vim.command('tabe '+os.path.abspath('$1'));"
  fi
}

# if [[ -z $NVIM_LISTEN_ADDRESS && $TERM == rxvt-unicode-256color ]]; then
#   # not running inside nvim
#   nvim term://zsh && exit
# fi



# Set window title to command just before running it.
preexec() { printf "\x1b]0;%s\x07" "$1"; }

# Set window title to current working directory after returning from a command.
precmd() { printf "\x1b]0;%s\x07" "$PWD" }

mkcd ()
{
      mkdir -p -- "$1" &&
      cd -P -- "$1"
}

alias iwsplit="sudo iw dev wlp3s0 interface add wlp3s1 type station"
unalias e

[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

bindkey "^?" backward-delete-char
bindkey "^W" backward-kill-word
bindkey "^H" backward-delete-char
bindkey "^U" backward-kill-line
#bindkey "^R" history-incremental-search-backward

# fd - cd to selected directory
fd() {
  local dir
  dir=$(find ${1:-.} -path '*/\.*' -prune \
                  -o -type d -print -maxdepth 3 2> /dev/null | fzf +m) &&
  cd "$dir"
}

# cf - fuzzy cd from anywhere
# ex: cf word1 word2 ... (even part of a file name)
# zsh autoload function
cf() {
  local file

  file="$(locate -Ai -0 $@ | grep -z -vE '~$' | fzf --read0 -0 -1)"

  if [[ -n $file ]]
  then
     if [[ -d $file ]]
     then
        cd -- $file
     else
        cd -- ${file:h}
     fi
  fi
}
